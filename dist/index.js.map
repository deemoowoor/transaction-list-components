{"version":3,"file":"index.js","sources":["../node_modules/clsx/dist/clsx.m.js","../components/Dialogs/AddTransactionFormDialog.js","../components/Dialogs/EditTransactionFormDialog.js","../components/EnhancedTable/index.js","../components/EnhancedTable/EnhancedTableToolbar.js","../components/Transactions/TransactionsTableQuery.js"],"sourcesContent":["function toVal(mix) {\n\tvar k, y, str='';\n\tif (mix) {\n\t\tif (typeof mix === 'object') {\n\t\t\tif (Array.isArray(mix)) {\n\t\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\t\tif (mix[k] && (y = toVal(mix[k]))) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (k in mix) {\n\t\t\t\t\tif (mix[k] && (y = toVal(k))) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof mix !== 'boolean' && !mix.call) {\n\t\t\tstr && (str += ' ');\n\t\t\tstr += mix;\n\t\t}\n\t}\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (x = toVal(arguments[i++])) {\n\t\t\tstr && (str += ' ');\n\t\t\tstr += x\n\t\t}\n\t}\n\treturn str;\n}\n","import React from \"react\"\r\n\r\nimport clsx from \"clsx\"\r\nimport { v4 as uuid4 } from \"uuid\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}))\r\n\r\nconst AddTransactionFormDialog = props => {\r\n  const classes = useStyles()\r\n\r\n  const { currencyList, open, onSubmit, onClose } = props\r\n\r\n  const [currency, setCurrency] = React.useState(currencyList[0])\r\n  const [amount, setAmount] = React.useState(0)\r\n\r\n  const onCurrencySelected = event => {\r\n    setCurrency(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">Add transaction</DialogTitle>\r\n      <DialogContent>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault()\r\n            return onSubmit({ event, uuid: uuid4(), currency, amount })\r\n            }}\r\n        >\r\n          <FormControl\r\n            className={clsx(classes.formControl, classes.inlineForm)}\r\n          >\r\n            <TextField\r\n              id=\"amount\"\r\n              label=\"Amount\"\r\n              value={amount}\r\n              onChange={event => setAmount(event.target.value)}\r\n            />\r\n          </FormControl>\r\n          <FormControl\r\n            className={clsx(classes.formControl, classes.inlineForm)}\r\n          >\r\n            <InputLabel id=\"filter-select-outlined-label\">Currency</InputLabel>\r\n            <Select\r\n              labelId=\"currency-select-outlined-label\"\r\n              id=\"currency-select-outlined\"\r\n              onChange={onCurrencySelected}\r\n              value={currency}\r\n            >\r\n              {currencyList.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  {code}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={event =>\r\n            onSubmit({ event, uuid: uuid4(), currency, amount })\r\n          }\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddTransactionFormDialog\r\n","import React from \"react\"\r\n\r\nimport clsx from \"clsx\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}))\r\n\r\nconst EditTransactionFormDialog = props => {\r\n  const classes = useStyles()\r\n  const { currencyList, transaction, onSubmit, open, onClose } = props\r\n  \r\n  const [currency, setCurrency] = React.useState(transaction ? transaction.currency : currencyList[0])\r\n  const [amount, setAmount] = React.useState(transaction ? transaction.amount : 0)\r\n  \r\n  React.useEffect(() => {\r\n    if (transaction) {\r\n      setCurrency(transaction.currency)\r\n      setAmount(transaction.amount)\r\n    }\r\n    \r\n  }, [transaction])\r\n\r\n  const onCurrencySelected = event => {\r\n    setCurrency(event.target.value)\r\n  }\r\n\r\n  if (!open) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">Edit transaction</DialogTitle>\r\n      <DialogContent>\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault()\r\n            return onSubmit({ event, id: transaction.id, uuid: transaction.uuid,  currency, amount })\r\n            }}\r\n        >\r\n          <FormControl\r\n            className={clsx(classes.formControl, classes.inlineForm)}\r\n          >\r\n            <TextField\r\n              id=\"amount\"\r\n              label=\"Amount\"\r\n              value={amount}\r\n              onChange={event => setAmount(event.target.value)}\r\n            />\r\n          </FormControl>\r\n          <FormControl\r\n            className={clsx(classes.formControl, classes.inlineForm)}\r\n          >\r\n            <InputLabel id=\"filter-select-outlined-label\">Currency</InputLabel>\r\n            <Select\r\n              labelId=\"currency-select-outlined-label\"\r\n              id=\"currency-select-outlined\"\r\n              onChange={onCurrencySelected}\r\n              value={currency}\r\n            >\r\n              {currencyList.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  {code}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={event =>\r\n            onSubmit({\r\n              event,\r\n              id: transaction.id,\r\n              uuid: transaction.uuid,\r\n              currency,\r\n              amount,\r\n            })\r\n          }\r\n        >\r\n          Edit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditTransactionFormDialog\r\n","import React from \"react\"\r\n\r\nimport clsx from \"clsx\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport { AutoSizer, Column, Table } from \"react-virtualized\"\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  tableRow: {\r\n    cursor: \"pointer\",\r\n  },\r\n  tableRowHover: {\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n    padding: \"12px\"\r\n  },\r\n  checkboxCell: {\r\n    maxWidth: \"50px\",\r\n    padding: \"1px 0 0 0\"\r\n  },\r\n  noClick: {\r\n    cursor: \"initial\",\r\n  },\r\n})\r\n\r\nclass EnhancedVirtualizedTable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { selected: [] }\r\n  }\r\n\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  }\r\n\r\n  headerRowRenderer = ({\r\n    readonly,\r\n    numSelected,\r\n    rowCount,\r\n    className,\r\n    style,\r\n    onSelectAllClick,\r\n    columns,\r\n  }) => {\r\n    const { headerHeight, classes } = this.props\r\n\r\n    return (\r\n      <div className={className} role=\"row\" style={style}>\r\n        {!readonly ? (\r\n          <TableCell\r\n            component=\"div\"\r\n            className={clsx(\r\n              classes.tableCell,\r\n              classes.flexContainer,\r\n              classes.noClick,\r\n              classes.checkboxCell\r\n            )}\r\n            variant=\"head\"\r\n            style={{ height: headerHeight }}\r\n            align={\"left\"}\r\n            key={\"checkbox-cell\"}\r\n            padding=\"checkbox\"\r\n          >\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ \"aria-label\": \"select all\" }}\r\n            />\r\n          </TableCell>\r\n        ) : null}\r\n        {columns}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  headerСellRenderer = ({ columnIndex, onRequestSort, orderBy, order }) => {\r\n    const { headerHeight, columns, classes } = this.props\r\n\r\n    const headCell = columns[columnIndex]\r\n\r\n    const createSortHandler = property => event => {\r\n      onRequestSort(event, property)\r\n    }\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(\r\n          classes.tableCell,\r\n          classes.flexContainer,\r\n          classes.noClick\r\n        )}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={headCell.numeric || false ? \"right\" : \"left\"}\r\n        padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n        sortDirection={orderBy === headCell.dataKey ? order : false}\r\n      >\r\n        <TableSortLabel\r\n          active={orderBy === headCell.dataKey}\r\n          direction={orderBy === headCell.dataKey ? order : \"asc\"}\r\n          onClick={createSortHandler(headCell.dataKey)}\r\n        >\r\n          {headCell.label}\r\n          {orderBy === headCell.dataKey ? (\r\n            <span className={classes.visuallyHidden}>\r\n              {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n            </span>\r\n          ) : null}\r\n        </TableSortLabel>\r\n      </TableCell>\r\n    )\r\n  }\r\n\r\n  rowRenderer = ({\r\n    className,\r\n    columns,\r\n    key,\r\n    index: rowIndex,\r\n    rowData,\r\n    style,\r\n    onRowClick,\r\n  }) => {\r\n    const { readonly, classes } = this.props\r\n\r\n    if (!rowData) {\r\n      return null\r\n    }\r\n\r\n    const isItemSelected = !readonly && this.isSelected(rowData.id)\r\n\r\n    return (\r\n      <TableRow\r\n        component=\"div\"\r\n        hover\r\n        onClick={event => onRowClick({event, index: rowIndex, rowData})}\r\n        role=\"checkbox\"\r\n        aria-checked={isItemSelected}\r\n        tabIndex={-1}\r\n        key={key}\r\n        selected={isItemSelected}\r\n        className={className}\r\n        style={style}\r\n      >\r\n        {!readonly ? (\r\n          <TableCell\r\n            component=\"div\"\r\n            padding=\"checkbox\"\r\n            className={clsx(\r\n              classes.tableCell,\r\n              classes.flexContainer,\r\n              classes.checkboxCell\r\n            )}\r\n          >\r\n            <Checkbox\r\n              checked={isItemSelected}\r\n              inputProps={{ \"aria-labelledby\": `enhanced-table-checkbox-0` }}\r\n            />\r\n          </TableCell>\r\n        ) : null}\r\n        {columns}\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  cellRenderer = ({\r\n    cellData,\r\n    columnIndex,\r\n    columnsSpec,\r\n    classes\r\n  }) => {\r\n    return (\r\n      <TableCell\r\n        key={columnIndex}\r\n        component=\"div\"\r\n        id={`enhanced-table-checkbox-${columnIndex}`}\r\n        scope=\"row\"\r\n        padding=\"default\"\r\n        align={columnsSpec[columnIndex].numeric ? \"right\" : \"left\"}\r\n        className={clsx(classes.tableCell, classes.flexContainer)}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    )\r\n  }\r\n\r\n  isSelected = id => this.props.selected.indexOf(id) !== -1\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      columns,\r\n      rows,\r\n      rowCount,\r\n      rowsOnPage,\r\n      order,\r\n      orderBy,\r\n      onRequestSort,\r\n      onRowClick,\r\n      onSelectAllClick,\r\n      readonly,\r\n      rowHeight,\r\n      headerHeight,\r\n      styles,\r\n      classes,\r\n      selected,\r\n      ...tableProps\r\n    } = this.props\r\n\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: \"inherit\",\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            rowGetter={({ index }) => rows[index]}\r\n            rowCount={rowsOnPage}\r\n            rowClassName={this.getRowClassName}\r\n            onRowClick={onRowClick}\r\n            rowRenderer={rowProps =>\r\n              this.rowRenderer({\r\n                columnsSpec: columns,\r\n                ...rowProps,\r\n              })\r\n            }\r\n            headerRowRenderer={headerRowProps =>\r\n              this.headerRowRenderer({\r\n                readonly,\r\n                rowCount: rowsOnPage,\r\n                onSelectAllClick,\r\n                numSelected: selected.length,\r\n                columnsSpec: columns,\r\n                ...headerRowProps,\r\n              })\r\n            }\r\n            {...tableProps}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerСellRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                      onSelectAllClick,\r\n                      onRequestSort,\r\n                      readonly,\r\n                      orderBy,\r\n                      order,\r\n                    })\r\n                  }\r\n                  cellRenderer={cellProps => this.cellRenderer({\r\n                    classes,\r\n                    columnsSpec: columns,\r\n                    ...cellProps\r\n                  })}\r\n                  className={classes.flexContainer}\r\n                  dataKey={dataKey}\r\n                  flexGrow={1}\r\n                  {...other}\r\n                />\r\n              )\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    )\r\n  }\r\n}\r\n\r\nconst EnhancedTable = withStyles(styles)(EnhancedVirtualizedTable)\r\nexport default EnhancedTable\r\n","import React from \"react\"\r\n\r\nimport clsx from \"clsx\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\"\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.8),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}))\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles()\r\n  const {\r\n    numSelected,\r\n    readonly,\r\n    onDeleteAction,\r\n    onFilterSelected,\r\n    onShowAddDialog,\r\n    onShowEditDialog,\r\n    filterSelectList,\r\n    filterTitle,\r\n    filterValue,\r\n  } = props\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: !readonly && numSelected > 0,\r\n      })}\r\n    >\r\n      {!readonly && numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Transactions\r\n        </Typography>\r\n      )}\r\n\r\n      {!readonly && numSelected === 0 ? (\r\n        <Tooltip title=\"Add\">\r\n          <IconButton\r\n            aria-label=\"add\"\r\n            onClick={onShowAddDialog}\r\n          >\r\n            <AddIcon color=\"action\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null}\r\n\r\n      {!readonly && numSelected === 1 ? (\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton\r\n            aria-label=\"Edit\"\r\n            onClick={onShowEditDialog}\r\n          >\r\n            <EditIcon color=\"action\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null}\r\n\r\n      {!readonly && numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={onDeleteAction}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <React.Fragment>\r\n          <FilterListIcon key={\"icon\"} title={filterTitle} />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"filter-select-outlined-label\">\r\n              {filterTitle}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"filter-select-outlined-label\"\r\n              id=\"filter-select-outlined\"\r\n              value={filterValue || \"\"}\r\n              onChange={onFilterSelected}\r\n              label={filterTitle}\r\n            >\r\n              <MenuItem key={\"empty-menu-item\"} value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {filterSelectList.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  {code}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </React.Fragment>\r\n      )}\r\n\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default EnhancedTableToolbar\r\n","import React from \"react\"\r\n\r\nimport {\r\n  LinearProgress,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography\r\n} from \"@material-ui/core\"\r\n\r\nimport { Query } from \"@apollo/react-components\"\r\nimport { gql, useMutation } from \"@apollo/client\"\r\n\r\nimport TablePagination from \"@material-ui/core/TablePagination\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\n\r\nimport HourglassEmptyOutlined from \"@material-ui/icons/HourglassEmptyOutlined\"\r\nimport Error from \"@material-ui/icons/Error\"\r\n\r\nimport EnhancedTable from \"../EnhancedTable/index\"\r\nimport EnhancedTableToolbar from \"../EnhancedTable/EnhancedTableToolbar\"\r\n\r\nimport AddTransactionFormDialog from \"../Dialogs/AddTransactionFormDialog\"\r\nimport EditTransactionFormDialog from \"../Dialogs/EditTransactionFormDialog\"\r\n\r\nconst QUERY_TRANSACTIONS_AND_CURRENCIES = gql`\r\n  query TransactionConnection(\r\n    $page: ID!\r\n    $pageSize: Int!\r\n    $order: String\r\n    $orderBy: String\r\n    $filter: String\r\n  ) {\r\n    transactionConnection(\r\n      page: $page\r\n      pageSize: $pageSize\r\n      order: $order\r\n      orderBy: $orderBy\r\n      filter: $filter\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          uuid\r\n          amount\r\n          currency\r\n        }\r\n      }\r\n      pageInfo {\r\n        totalCount\r\n        hasNextPage\r\n      }\r\n    }\r\n    currencies {\r\n      code\r\n    }\r\n  }\r\n`\r\n\r\nconst ADD_TRANSACTION = gql`\r\n  mutation AddTransaction($uuid: String!, $amount: Float!, $currency: String!) {\r\n    addTransaction(uuid: $uuid, amount: $amount, currency: $currency) {\r\n      id\r\n      uuid\r\n      amount\r\n      currency\r\n    }\r\n  }\r\n`\r\n\r\nconst UPDATE_TRANSACTION = gql`\r\n  mutation UpdateTransaction(\r\n    $id: ID!\r\n    $uuid: ID!\r\n    $amount: Float!\r\n    $currency: String!\r\n  ) {\r\n    updateTransaction(\r\n      id: $id\r\n      uuid: $uuid\r\n      amount: $amount\r\n      currency: $currency\r\n    ) {\r\n      id\r\n      uuid\r\n      amount\r\n      currency\r\n    }\r\n  }\r\n`\r\n\r\nconst DELETE_BULK_TRANSACTIONS = gql`\r\n  mutation DeleteTransactionsBulk($idList: [ID!]) {\r\n    deleteTransactionsBulk(idList: $idList) {\r\n      ok\r\n    }\r\n  }\r\n`\r\n\r\nconst columns = [\r\n  {\r\n    dataKey: \"id\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"ID\",\r\n    width: 200,\r\n  },\r\n  {\r\n    dataKey: \"amount\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Amount\",\r\n    width: 200,\r\n  },\r\n  {\r\n    dataKey: \"currency\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Currency\",\r\n    width: 200,\r\n  },\r\n]\r\n\r\nconst LoadingCard = () => (\r\n  <Card className=\"rotate-div\">\r\n    <CardHeader\r\n      avatar={\r\n        <HourglassEmptyOutlined color=\"primary\" className=\"rotate-infinite\" />\r\n      }\r\n      title=\"Transactions list loading...\"\r\n    ></CardHeader>\r\n    <CardContent>\r\n      <Typography>Please, wait...</Typography>\r\n    </CardContent>\r\n    <LinearProgress color=\"primary\" />\r\n  </Card>\r\n)\r\n\r\nconst ErrorCard = ({ error }) => (\r\n  <Card className=\"rotate-div\">\r\n    <CardHeader\r\n      avatar={<Error color=\"secondary\" />}\r\n      title=\"Loading transactions list failed!\"\r\n    ></CardHeader>\r\n    <CardContent>\r\n      <Typography>Error: {error || \"no data\"}</Typography>\r\n    </CardContent>\r\n  </Card>\r\n)\r\n\r\nexport default function TransactionsTableQuery({ readonly }) {\r\n  const [order, setOrder] = React.useState(\"asc\")\r\n  const [orderBy, setOrderBy] = React.useState(\"id\")\r\n  const [page, setPage] = React.useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50)\r\n  const [selected, setSelected] = React.useState([])\r\n  const [windowInnerHeight, setWindowInnerHeight] = React.useState(\r\n    400\r\n  )\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false)\r\n\r\n  const [showAddForm, setShowAddForm] = React.useState(false)\r\n  const [showEditForm, setShowEditForm] = React.useState(false)\r\n\r\n  const [addTransaction, { _addData }] = useMutation(ADD_TRANSACTION)\r\n  const [updateTransaction, { _updateData }] = useMutation(UPDATE_TRANSACTION)\r\n  const [deleteTransactions, { _deleteData }] = useMutation(\r\n    DELETE_BULK_TRANSACTIONS\r\n  )\r\n\r\n  const [filter, setFilter] = React.useState(\"\")\r\n\r\n  React.useEffect(() => {\r\n    if (window) {\r\n      setWindowInnerHeight(window.innerHeight)\r\n    }\r\n  }, [])\r\n\r\n  const updateWindowDimensions = () => {\r\n    setWindowInnerHeight(window.innerHeight)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWindowDimensions)\r\n  })\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    if (typeof event.target.value === \"string\") {\r\n      setRowsPerPage(parseInt(event.target.value, 50))\r\n    } else {\r\n      setRowsPerPage(event.target.value)\r\n    }\r\n\r\n    setPage(0)\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\"\r\n    setOrder(isAsc ? \"desc\" : \"asc\")\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleRowClick = ({ rowData }) => {\r\n    let newSelected = []\r\n    const selectedIndex = selected.indexOf(rowData.id)\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, rowData.id)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const handleDeleteAction = async (event, refetch) => {\r\n    const result = await deleteTransactions({ variables: { idList: selected } })\r\n    console.log(\"handleDeleteAction\", result)\r\n    setSnackbarOpen(true)\r\n    setSelected([])\r\n    refetch()\r\n  }\r\n\r\n  const handleAddTransaction = async (\r\n    { event, uuid, currency, amount },\r\n    refetch\r\n  ) => {\r\n    const result = await addTransaction({\r\n      variables: { uuid, currency, amount: parseFloat(amount) },\r\n    })\r\n    console.log(\"handleAddTransaction\", result)\r\n    setSnackbarOpen(true)\r\n    refetch()\r\n    setShowAddForm(false)\r\n  }\r\n\r\n  const handleUpdateTransaction = async (\r\n    { event, id, uuid, currency, amount },\r\n    refetch\r\n  ) => {\r\n    const result = await updateTransaction({\r\n      variables: { id, uuid, currency, amount: parseFloat(amount) },\r\n    })\r\n    console.log(\"handleUpdateTransaction\", result)\r\n    setSnackbarOpen(true)\r\n    refetch()\r\n    setShowEditForm(false)\r\n  }\r\n\r\n  const handleFilterSelected = event => {\r\n    setFilter(event.target.value)\r\n    setPage(0)\r\n  }\r\n\r\n  const handleSnackbarClose = _event => {\r\n    setSnackbarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Query\r\n      query={QUERY_TRANSACTIONS_AND_CURRENCIES}\r\n      variables={{ page, pageSize: rowsPerPage, order, orderBy, filter }}\r\n    >\r\n      {result => {\r\n        const { error, data, loading, refetch } = result\r\n        if (loading) {\r\n          return <LoadingCard />\r\n        }\r\n\r\n        if (!data || !data.transactionConnection.edges || error) {\r\n          if (error) {\r\n            console.error(error)\r\n          }\r\n          return <ErrorCard error={error} />\r\n        }\r\n\r\n        const rows = data.transactionConnection.edges.map(edge => edge.node)\r\n        const totalCount = data.transactionConnection.pageInfo.totalCount\r\n\r\n        const currencies = data.currencies.map(i => i.code)\r\n\r\n        const handleSelectAllClick = event => {\r\n          if (event.target.checked) {\r\n            const newSelecteds = rows.map(item => item.id)\r\n            setSelected(newSelecteds)\r\n            return\r\n          }\r\n\r\n          setSelected([])\r\n        }\r\n\r\n        const otherElementsHeight = 172\r\n\r\n        const rowsOnPage = Math.min(\r\n          rowsPerPage,\r\n          totalCount - page * rowsPerPage\r\n        )\r\n\r\n        return (\r\n          <TableContainer>\r\n            <EnhancedTableToolbar\r\n              readonly={readonly}\r\n              numSelected={selected.length}\r\n              onDeleteAction={event => handleDeleteAction(event, refetch)}\r\n              onFilterSelected={handleFilterSelected}\r\n              onShowAddDialog={() => setShowAddForm(true)}\r\n              onShowEditDialog={() => setShowEditForm(true)}\r\n              filterSelectList={currencies}\r\n              filterValue={filter}\r\n              filterTitle=\"Currency\"\r\n            />\r\n            <Paper\r\n              style={{\r\n                height: windowInnerHeight - otherElementsHeight,\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <EnhancedTable\r\n                rows={rows}\r\n                rowCount={totalCount}\r\n                rowsOnPage={rowsOnPage}\r\n                columns={columns}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                onRowClick={handleRowClick}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                readonly={readonly}\r\n                selected={selected}\r\n              />\r\n            </Paper>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 50, 100, 500, 1000, 10000]}\r\n              component=\"div\"\r\n              count={totalCount}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n            <Snackbar\r\n              open={snackbarOpen}\r\n              autoHideDuration={6000}\r\n              onClose={handleSnackbarClose}\r\n            >\r\n              <Typography>Action completed successfully</Typography>\r\n            </Snackbar>\r\n\r\n            <AddTransactionFormDialog\r\n              open={!readonly && selected.length === 0 && showAddForm}\r\n              currencyList={currencies}\r\n              onSubmit={(eventData) => handleAddTransaction(eventData, refetch)}\r\n              onClose={() => setShowAddForm(false)}\r\n            />\r\n\r\n            <EditTransactionFormDialog\r\n              open={!readonly && selected.length === 1 && showEditForm}\r\n              currencyList={currencies}\r\n              transaction={selected.length === 1 ? rows.filter(r => r.id === selected[0])[0] : null}\r\n              onSubmit={(eventData) => handleUpdateTransaction(eventData, refetch)}\r\n              onClose={() => setShowEditForm(false)}\r\n            />\r\n          </TableContainer>\r\n        )\r\n      }}\r\n    </Query>\r\n  )\r\n}\r\n"],"names":["useStyles","makeStyles","theme","spacing","AddTransactionFormDialog","classes","currencyList","props","open","onSubmit","onClose","React","useState","currency","setCurrency","amount","setAmount","onCurrencySelected","event","target","value","preventDefault","uuid","uuid4","clsx","formControl","inlineForm","map","code","EditTransactionFormDialog","transaction","useEffect","id","styles","palette","grey","EnhancedVirtualizedTable","headerRowRenderer","readonly","numSelected","rowCount","className","style","onSelectAllClick","columns","headerHeight","tableCell","flexContainer","noClick","checkboxCell","height","headerСellRenderer","columnIndex","onRequestSort","orderBy","order","headCell","createSortHandler","property","numeric","disablePadding","dataKey","label","visuallyHidden","rowRenderer","key","rowIndex","index","rowData","onRowClick","isItemSelected","isSelected","cellRenderer","cellData","columnsSpec","selected","indexOf","getRowClassName","tableRow","tableRowHover","state","rows","rowsOnPage","rowHeight","tableProps","width","table","rowProps","length","headerRowProps","other","Column","headerProps","cellProps","Component","defaultProps","EnhancedTable","withStyles","useToolbarStyles","type","secondary","main","lighten","light","text","primary","dark","EnhancedTableToolbar","onDeleteAction","onFilterSelected","onShowAddDialog","onShowEditDialog","filterSelectList","filterTitle","filterValue","root","highlight","title","QUERY_TRANSACTIONS_AND_CURRENCIES","gql","ADD_TRANSACTION","UPDATE_TRANSACTION","DELETE_BULK_TRANSACTIONS","LoadingCard","CardHeader","LinearProgress","ErrorCard","error","TransactionsTableQuery","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","setSelected","windowInnerHeight","setWindowInnerHeight","snackbarOpen","setSnackbarOpen","showAddForm","setShowAddForm","showEditForm","setShowEditForm","useMutation","addTransaction","_addData","updateTransaction","_updateData","deleteTransactions","_deleteData","filter","setFilter","window","innerHeight","updateWindowDimensions","addEventListener","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","handleRequestSort","isAsc","handleRowClick","newSelected","selectedIndex","concat","slice","handleDeleteAction","refetch","variables","idList","log","result","handleAddTransaction","parseFloat","handleUpdateTransaction","handleFilterSelected","handleSnackbarClose","pageSize","data","loading","transactionConnection","edges","edge","node","totalCount","pageInfo","currencies","i","handleSelectAllClick","checked","newSelecteds","item","otherElementsHeight","Math","min","eventData","r"],"mappings":"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"}